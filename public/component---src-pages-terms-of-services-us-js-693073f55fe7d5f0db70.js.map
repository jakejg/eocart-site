{"version":3,"sources":["webpack:///./src/pages/terms-of-services-us.js","webpack:///./src/components/seo.js"],"names":["TOS_US","data","useStaticQuery","title","tos","pageBy","className","lg","class","xs","dangerouslySetInnerHTML","__html","content","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","property","author","concat","defaultProps"],"mappings":"4FAAA,wGA8CeA,UAxCA,WACb,IAAMC,EAAOC,yBAAe,YAW5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOF,EAAKG,IAAIC,OAAOF,QAC5B,yBAAKG,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,IAAE,GACL,yBAAKC,MAAM,gBACT,4BAAKP,EAAKG,IAAIC,OAAOF,UAI3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKI,IAAE,EAACE,GAAI,IACV,yBACEH,UAAU,eACVI,wBAAyB,CACvBC,OAAQV,EAAKG,IAAIC,OAAOO,kB,kCCnC1C,iDAYA,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMb,EAAS,EAATA,MAC9Bc,EAASf,yBAAe,YAAxBe,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdL,QAEFZ,MAAOA,EACPkB,cAAa,QAAUJ,EAAKE,aAAahB,MACzCa,KAAM,CACJ,CACEM,KAAK,cACLV,QAASM,GAEX,CACEK,SAAS,WACTX,QAAST,GAEX,CACEoB,SAAS,iBACTX,QAASM,GAEX,CACEK,SAAS,UACTX,QAAQ,WAEV,CACEU,KAAK,eACLV,QAAQ,WAEV,CACEU,KAAK,kBACLV,QAASK,EAAKE,aAAaK,QAE7B,CACEF,KAAK,gBACLV,QAAST,GAEX,CACEmB,KAAK,sBACLV,QAASM,IAEXO,OAAOT,KAKfH,EAAIa,aAAe,CACjBX,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-terms-of-services-us-js-693073f55fe7d5f0db70.js","sourcesContent":["import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst TOS_US = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      tos: wordpress {\n        pageBy(id: \"cG9zdDoxNTY0\") {\n          id\n          title(format: RENDERED)\n          content\n        }\n      }\n    }\n  `);\n  return (\n    <Layout>\n      <SEO title={data.tos.pageBy.title} />\n      <div className=\"tos\">\n        <Container>\n          <Row>\n            <Col lg>\n              <div class=\"page-heading\">\n                <h2>{data.tos.pageBy.title}</h2>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg xs={12}>\n              <div\n                className=\"tos__content\"\n                dangerouslySetInnerHTML={{\n                  __html: data.tos.pageBy.content,\n                }}\n              ></div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </Layout>\n  );\n};\n\nexport default TOS_US;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}