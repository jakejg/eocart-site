{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/terms-of-services-eu.js"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","TOS_EU","data","tos","pageBy","className","lg","class","xs","dangerouslySetInnerHTML","__html"],"mappings":"4FAAA,iDAYA,SAASA,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACE,kBAAC,IAAD,CACEQ,eAAgB,CACdP,QAEFE,MAAOA,EACPM,cAAa,QAAUL,EAAKG,aAAaJ,MACzCD,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,sBACLC,QAASL,IAEXQ,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,kCCvFf,wGA8CeiB,UAxCA,WACb,IAAMC,EAAOZ,yBAAe,cAW5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKF,MAAOc,EAAKC,IAAIC,OAAOhB,QAC5B,yBAAKiB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,IAAE,GACL,yBAAKC,MAAM,gBACT,4BAAKL,EAAKC,IAAIC,OAAOhB,UAI3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKkB,IAAE,EAACE,GAAI,IACV,yBACEH,UAAU,eACVI,wBAAyB,CACvBC,OAAQR,EAAKC,IAAIC,OAAOR","file":"component---src-pages-terms-of-services-eu-js-46532a05e99438418e25.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst TOS_EU = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      tos: wordpress {\n        pageBy(id: \"cG9zdDoxNTY2\") {\n          id\n          title(format: RENDERED)\n          content\n        }\n      }\n    }\n  `);\n  return (\n    <Layout>\n      <SEO title={data.tos.pageBy.title} />\n      <div className=\"tos\">\n        <Container>\n          <Row>\n            <Col lg>\n              <div class=\"page-heading\">\n                <h2>{data.tos.pageBy.title}</h2>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg xs={12}>\n              <div\n                className=\"tos__content\"\n                dangerouslySetInnerHTML={{\n                  __html: data.tos.pageBy.content,\n                }}\n              ></div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </Layout>\n  );\n};\n\nexport default TOS_EU;\n"],"sourceRoot":""}